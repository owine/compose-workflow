name: Lint Docker Compose

on:
  workflow_call:
    inputs:
      stacks:
        description: "JSON array of stack names to lint"
        required: true
        type: string
      webhook-url:
        description: "1Password reference to Discord webhook URL"
        required: true
        type: string
      repo-name:
        description: "Repository display name for notifications"
        required: true
        type: string
      target-repository:
        description: "Target repository to checkout (owner/repo-name)"
        required: true
        type: string
      target-ref:
        description: "Git reference to checkout from target repository"
        required: false
        type: string
        default: 'main'
      github-event-before:
        description: "GitHub event before SHA (github.event.before)"
        required: false
        type: string
        default: ''
      github-event-base:
        description: "GitHub event base SHA (github.event.base)"
        required: false
        type: string
        default: ''
      github-pull-base-sha:
        description: "GitHub pull request base SHA (github.event.pull_request.base.sha)"
        required: false
        type: string
        default: ''
      github-default-branch:
        description: "GitHub repository default branch (github.event.repository.default_branch)"
        required: false
        type: string
        default: 'main'
      event-name:
        description: "GitHub event name (github.event_name)"
        required: false
        type: string
        default: 'push'

jobs:
  scanning:
    name: GitGuardian scan
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: ${{ inputs.event-name == 'push' }}
    steps:
      - name: Checkout target repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # v5.0.0
        with:
          repository: ${{ inputs.target-repository }}
          ref: ${{ inputs.target-ref }}
          fetch-depth: 0  # fetch all history so multiple commits can be scanned

      - name: Load GitGuardian credentials
        id: op-load-secret
        uses: 1password/load-secrets-action@13f58eec611f8e5db52ec16247f58c508398f3e6  # v3.0.0
        with:
          unset-previous: true
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
          GITGUARDIAN_API_KEY: "op://Docker/gitguardian/api_key"

          - name: GitGuardian scan
        uses: GitGuardian/ggshield-action@69380a64a54eb293ae6f22d4364ae745b77f937c # v1.42.0
        env:
          GITHUB_PUSH_BEFORE_SHA: ${{ inputs.github-event-before }}
          GITHUB_PUSH_BASE_SHA: ${{ inputs.github-event-base }}
          GITHUB_PULL_BASE_SHA: ${{ inputs.github-pull-base-sha }}
          GITHUB_DEFAULT_BRANCH: ${{ inputs.github-default-branch }}
          GITGUARDIAN_API_KEY: ${{ steps.op-load-secret.outputs.GITGUARDIAN_API_KEY }}

      - name: Unload GitGuardian credentials
        uses: 1password/load-secrets-action@13f58eec611f8e5db52ec16247f58c508398f3e6  # v3.0.0
        with:
          unset-previous: true

  lint:
    strategy:
      matrix:
        stack: ${{ fromJson(inputs.stacks) }}
      fail-fast: false
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout target repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # v5.0.0
        with:
          repository: ${{ inputs.target-repository }}
          ref: ${{ inputs.target-ref }}

      - name: YAML Linter
        run: yamllint --strict --config-file .yamllint ./${{ matrix.stack }}/compose.yaml

      - name: Docker Compose Linter
        run: docker compose -f ./${{ matrix.stack }}/compose.yaml config

      - name: Report lint status
        if: always()
        run: |
          echo "::group::Lint Results for ${{ matrix.stack }}"
          echo "Stack: ${{ matrix.stack }}"
          echo "Status: $([ ${{ job.status }} == 'success' ] && echo '‚úÖ PASSED' || echo '‚ùå FAILED')"
          echo "::endgroup::"


  lint-summary:
    name: Lint Summary
    runs-on: ubuntu-latest
    needs: [scanning, lint]
    if: always()
    steps:
      - name: Check results
        run: |
          echo "Scanning result: ${{ needs.scanning.result }}"
          echo "Lint result: ${{ needs.lint.result }}"

          if [[ "${{ needs.scanning.result }}" == "success" || "${{ needs.scanning.result }}" == "skipped" ]] && [[ "${{ needs.lint.result }}" == "success" ]]; then
            echo "‚úÖ All lint checks passed"
            exit 0
          else
            echo "‚ùå One or more lint checks failed"
            exit 1
          fi

  notify:
    name: Discord Notification
    runs-on: ubuntu-latest
    needs: [scanning, lint, lint-summary]
    if: always()
    steps:
      - name: Load Discord webhook
        id: op-load-discord
        uses: 1password/load-secrets-action@13f58eec611f8e5db52ec16247f58c508398f3e6  # v3.0.0
        with:
          export-env: false
          unset-previous: true
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
          DISCORD_WEBHOOK: ${{ inputs.webhook-url }}

      - name: Send Discord notification
        uses: sarisia/actions-status-discord@11a0bfe3b50977e38aa2bd4a4ebd296415e83c19  # v1.15.4
        if: ${{ needs.lint-summary.result == 'failure' || (needs.lint-summary.result == 'success' && github.event_name != 'pull_request') }}
        with:
          webhook: ${{ steps.op-load-discord.outputs.DISCORD_WEBHOOK }}
          status: ${{ needs.lint-summary.result == 'success' && 'success' || 'failure' }}
          title: "üîç ${{ inputs.repo-name }} Validation"
          description: |
            ${{ needs.lint-summary.result == 'success' && '‚úÖ **VALIDATION PASSED**' || '‚ùå **VALIDATION FAILED**' }}

            **Security:** GitGuardian ${{ needs.scanning.result == 'success' && '‚úÖ' || needs.scanning.result == 'skipped' && '‚è≠Ô∏è' || '‚ùå' }} **Quality:** Linting ${{ needs.lint.result == 'success' && '‚úÖ' || '‚ùå' }}

            ${{ github.event_name == 'pull_request' && 'üîÄ **Pull Request**' || github.event_name == 'workflow_dispatch' && 'üîß **Manual Trigger**' || format('üìù **Push to {0}**', github.ref_name) }}
            **Stacks:** ${{ join(fromJson(inputs.stacks), ', ') }}
          color: ${{ needs.lint-summary.result == 'success' && 0x00ff00 || 0xff0000 }}
          username: "GitHub Actions"
          avatar_url: "https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png"
